# This workflow will do a clean installation of node dependencies, cache/restore them,
# build the source code, and run tests across different versions of Node.js.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # Check and set directory permissions
      - name: Check and Set Permissions
        run: |
          echo "Checking directory permissions..."
          ls -ld /home/ubuntu/actions-meadhikari/_work/server/server
          echo "Setting directory ownership and permissions..."
          sudo chown -R ubuntu:ubuntu /home/ubuntu/actions-meadhikari/_work/server/server
          sudo chmod -R 755 /home/ubuntu/actions-meadhikari/_work/server/server

      # Navigate to the server directory and install dependencies
      - name: Clean and Install Dependencies
        run: |
          echo "Navigating to server directory..."
          cd /home/ubuntu/actions-meadhikari/_work/server/server
          echo "Removing old node_modules and package-lock.json..."
          rm -rf node_modules package-lock.json
          echo "Installing new dependencies..."
          sudo npm install --timeout=50000 --verbose
          echo "Successfully added new dependencies..."

      # Start the server if it's not running, otherwise restart it
      - name: Start or Restart Server
        run: |
          if pm2 status | grep -q 'server'; then
            echo "Restarting server..."
            pm2 restart server.js
          else
            echo "Starting server..."
            pm2 start server.js
          fi
